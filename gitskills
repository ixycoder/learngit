分支管理
 创建与合并分支
  查看分支：git branch
  创建分支：git branch <name>
  切换分支：git checkout <name>
  创建＋切换分支：git checkout －b <name>
  合并某分支到当前分支：git merge <name>
  删除分支：git branch －d <name>
 解决冲突
  当Git无法自动合并分支时，就必须首先解决冲突。解决冲突后，再提交，合并完成。
  用git log --graph命令可以看到分支合并图
 分支策略：合并分支时，加上--no-ff参数可以用普通模式合并，合并后的历史有分支，能看出来曾经做过合并，而fast forward合并就看不出来曾经做过合并
 bug分支：修复bug时，我们会通过创建新的bug分支进行修复，然后进行合并，最后删除；当手头工作没有完成时，先把工作现场git stash一下，然后去修复bug，修复后，再git stash pop，回到工作现场  
 多人协作：多人协作工作模式一般是：1、首先，可以试图用git push origin branch-name推送自己的修改；2、如果推送失败，则因为远程分支比你的本地更新，需要先用git pull试图合并；3、如果合并有冲突，则解决冲突，并在本地提交；4、没有冲突或者解决掉冲突后，再用git push origin branch-name推送就能成功！如果git pull提示“no tracking information”，则说明本地分支和远程分支的链接关系没有创建，用命令git branch --set-upstream branch-name origin/branch-name
 创建标签：命令git tag <name> 用于新建一个标签，默认为HEAD，也可以指定一个commit id；git tag -a <tagname> -m "blabla..." 可以指定标签信息；git tag -s <tagname> -m "blabla..."可以用PGP签名标签；命令git tag可以查看所有标签
